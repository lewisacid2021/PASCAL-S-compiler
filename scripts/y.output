Terminals unused in grammar

    CASE


State 140 conflicts: 17 reduce/reduce
State 155 conflicts: 2 reduce/reduce
State 178 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_head program_body '.'

    2 program_head: PROGRAM ID '(' id_list ')' ';'
    3             | PROGRAM ID '(' ')' ';'
    4             | PROGRAM ID ';'

    5 program_body: const_declarations record_declarations var_declarations subprogram_declarations compound_statement

    6 id_list: id_list ',' ID
    7        | ID

    8 const_declarations: ε
    9                   | CONST const_declaration ';'

   10 const_declaration: const_declaration ';' ID '=' const_value
   11                  | ID '=' const_value

   12 const_value: PLUS INT_NUM
   13            | UMINUS INT_NUM
   14            | INT_NUM
   15            | PLUS REAL_NUM
   16            | UMINUS REAL_NUM
   17            | REAL_NUM
   18            | STRING_
   19            | CHAR

   20 record_declarations: ε
   21                    | record_declaration

   22 record_declaration: TYPE CHAR CONSTASSIGNOP RECORD var_declaration END ';'
   23                   | record_declaration TYPE CHAR CONSTASSIGNOP RECORD var_declaration END ';'

   24 var_declarations: ε
   25                 | VAR var_declaration ';'

   26 var_declaration: var_declaration ';' id_list ':' type
   27                | id_list ':' type

   28 type: ID
   29     | array_type
   30     | RECORD var_declaration END ';'
   31     | string_type

   32 array_type: ARRAY '[' periods ']' OF type

   33 periods: periods ',' period
   34        | period

   35 period: INT_NUM SUBCATALOG INT_NUM

   36 string_type: STRING '[' INT_NUM ']'
   37            | STRING

   38 subprogram_declarations: ε
   39                        | subprogram_declarations subprogram_declaration ';'

   40 subprogram_declaration: subprogram_head subprogram_body

   41 subprogram_body: const_declarations var_declarations compound_statement

   42 subprogram_head: FUNCTION ID formal_parameter ':' type ';'
   43                | PROCEDURE ID formal_parameter ';'

   44 formal_parameter: ε
   45                 | '(' parameter_lists ')'

   46 parameter_lists: parameter_lists ';' parameter_list
   47                | parameter_list

   48 parameter_list: var_parameter
   49               | value_parameter

   50 var_parameter: VAR value_parameter

   51 value_parameter: id_list ':' type

   52 compound_statement: BEGIN_ statement_list END

   53 statement_list: statement_list ';' statement
   54               | statement

   55 statement: assignop_statement
   56          | procedure_call
   57          | compound_statement
   58          | ifstatement
   59          | loopstatement
   60          | ε

   61 assignop_statement: variable ASSIGNOP expression

   62 procedure_call: ID
   63               | ID '(' ')'
   64               | ID '(' expression_list ')'
   65               | ID '(' variable_list ')'

   66 ifstatement: IF expression THEN statement else_part

   67 else_part: ε
   68          | ELSE statement

   69 loopstatement: WHILE expression DO statement
   70              | REPEAT statement_list UNTIL expression
   71              | FOR ID ASSIGNOP expression DOWNTO expression DO statement
   72              | FOR ID ASSIGNOP expression TO expression DO statement

   73 variable_list: variable
   74              | variable_list ',' variable

   75 variable: ID id_varparts

   76 id_varparts: ε
   77            | id_varparts id_varpart

   78 id_varpart: '[' expression_list ']'
   79           | '.' ID

   80 expression_list: expression_list ',' expression
   81                | expression

   82 expression: simple_expression RELOP simple_expression
   83           | simple_expression CONSTASSIGNOP simple_expression
   84           | simple_expression

   85 simple_expression: term
   86                  | PLUS term
   87                  | UMINUS term
   88                  | simple_expression ADDOP term
   89                  | simple_expression PLUS term
   90                  | simple_expression UMINUS term

   91 term: factor
   92     | term MULOP factor

   93 factor: INT_NUM
   94       | REAL_NUM
   95       | STRING_
   96       | CHAR
   97       | variable
   98       | ID '(' expression_list ')'
   99       | '(' expression ')'
  100       | NOT factor
  101       | UMINUS factor


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 3 45 63 64 65 98 99
    ')' (41) 2 3 45 63 64 65 98 99
    ',' (44) 6 33 74 80
    '.' (46) 1 79
    ':' (58) 26 27 42 51
    ';' <token_info> (59) 2 3 4 9 10 22 23 25 26 30 39 42 43 46 53
    '=' (61) 10 11
    '[' (91) 32 36 78
    ']' (93) 32 36 78
    error (256)
    PROGRAM (258) 2 3 4
    FUNCTION (259) 42
    PROCEDURE (260) 43
    TO (261) 72
    DOWNTO (262) 71
    ARRAY (263) 32
    TYPE (264) 22 23
    CONST (265) 9
    RECORD (266) 22 23 30
    STRING (267) 36 37
    IF (268) 66
    THEN (269) 66
    ELSE (270) 68
    OF (271) 32
    WHILE (272) 69
    DO (273) 69 71 72
    FOR (274) 71 72
    REPEAT (275) 70
    UNTIL (276) 70
    BEGIN_ (277) 52
    END (278) 22 23 30 52
    ADDOP (279) 88
    NOT (280) 100
    PLUS (281) 12 15 86 89
    CASE (282)
    UMINUS (283) 13 16 87 90 101
    CONSTASSIGNOP (284) 22 23 83
    ID <token_info> (285) 2 3 4 6 7 10 11 28 42 43 62 63 64 65 71 72 75 79 98
    CHAR <token_info> (286) 19 22 23 96
    INT_NUM <token_info> (287) 12 13 14 35 36 93
    REAL_NUM <token_info> (288) 15 16 17 94
    RELOP <token_info> (289) 82
    MULOP <token_info> (290) 92
    STRING_ <token_info> (291) 18 95
    VAR <token_info> (292) 25 50
    SUBCATALOG <token_info> (293) 35
    ASSIGNOP <token_info> (294) 61 71 72


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    program_head <program_head_node> (51)
        on left: 2 3 4
        on right: 1
    program_body <program_body_node> (52)
        on left: 5
        on right: 1
    id_list <idlist_node> (53)
        on left: 6 7
        on right: 2 6 26 27 51
    const_declarations <const_declarations_node> (54)
        on left: 8 9
        on right: 5 41
    const_declaration <const_declaration_node> (55)
        on left: 10 11
        on right: 9 10
    const_value <const_value_node> (56)
        on left: 12 13 14 15 16 17 18 19
        on right: 10 11
    record_declarations <record_declarations_node> (57)
        on left: 20 21
        on right: 5
    record_declaration <record_declaration_node> (58)
        on left: 22 23
        on right: 21 23
    var_declarations <var_declarations_node> (59)
        on left: 24 25
        on right: 5 41
    var_declaration <var_declaration_node> (60)
        on left: 26 27
        on right: 22 23 25 26 30
    type <type_node> (61)
        on left: 28 29 30 31
        on right: 26 27 32 42 51
    array_type <array_node> (62)
        on left: 32
        on right: 29
    periods <periods_node> (63)
        on left: 33 34
        on right: 32 33
    period <period_node> (64)
        on left: 35
        on right: 33 34
    string_type <string_node> (65)
        on left: 36 37
        on right: 31
    subprogram_declarations <subprogram_declarations_node> (66)
        on left: 38 39
        on right: 5 39
    subprogram_declaration <subprogram_declaration_node> (67)
        on left: 40
        on right: 39
    subprogram_body <subprogram_body_node> (68)
        on left: 41
        on right: 40
    subprogram_head <subprogram_head_node> (69)
        on left: 42 43
        on right: 40
    formal_parameter <formal_param_node> (70)
        on left: 44 45
        on right: 42 43
    parameter_lists <paramlists_node> (71)
        on left: 46 47
        on right: 45 46
    parameter_list <paramlist_node> (72)
        on left: 48 49
        on right: 46 47
    var_parameter <var_param_node> (73)
        on left: 50
        on right: 48
    value_parameter <value_param_node> (74)
        on left: 51
        on right: 49 50
    compound_statement <compound_statement_node> (75)
        on left: 52
        on right: 5 41 57
    statement_list <statement_list_node> (76)
        on left: 53 54
        on right: 52 53 70
    statement <statement_node> (77)
        on left: 55 56 57 58 59 60
        on right: 53 54 66 68 69 71 72
    assignop_statement <assignop_statement_node> (78)
        on left: 61
        on right: 55
    procedure_call <procedure_call_node> (79)
        on left: 62 63 64 65
        on right: 56
    ifstatement <ifstatement_node> (80)
        on left: 66
        on right: 58
    else_part <elsepart_node> (81)
        on left: 67 68
        on right: 66
    loopstatement <loopstatement_node> (82)
        on left: 69 70 71 72
        on right: 59
    variable_list <variablelist_node> (83)
        on left: 73 74
        on right: 65 74
    variable <variable_node> (84)
        on left: 75
        on right: 61 73 74 97
    id_varparts <idvarparts_node> (85)
        on left: 76 77
        on right: 75 77
    id_varpart <idvarpart_node> (86)
        on left: 78 79
        on right: 77
    expression_list <expression_list_node> (87)
        on left: 80 81
        on right: 64 78 80 98
    expression <expression_node> (88)
        on left: 82 83 84
        on right: 61 66 69 70 71 72 80 81 99
    simple_expression <simple_expression_node> (89)
        on left: 85 86 87 88 89 90
        on right: 82 83 84 88 89 90
    term <term_node> (90)
        on left: 91 92
        on right: 85 86 87 88 89 90 92
    factor <factor_node> (91)
        on left: 93 94 95 96 97 98 99 100 101
        on right: 91 92 100 101


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program       go to state 2
    program_head  go to state 3


State 1

    2 program_head: PROGRAM • ID '(' id_list ')' ';'
    3             | PROGRAM • ID '(' ')' ';'
    4             | PROGRAM • ID ';'

    ID  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: program_head • program_body '.'

    CONST  shift, and go to state 6

    $default  reduce using rule 8 (const_declarations)

    program_body        go to state 7
    const_declarations  go to state 8


State 4

    2 program_head: PROGRAM ID • '(' id_list ')' ';'
    3             | PROGRAM ID • '(' ')' ';'
    4             | PROGRAM ID • ';'

    ';'  shift, and go to state 9
    '('  shift, and go to state 10


State 5

    0 $accept: program $end •

    $default  accept


State 6

    9 const_declarations: CONST • const_declaration ';'

    ID  shift, and go to state 11

    const_declaration  go to state 12


State 7

    1 program: program_head program_body • '.'

    '.'  shift, and go to state 13


State 8

    5 program_body: const_declarations • record_declarations var_declarations subprogram_declarations compound_statement

    TYPE  shift, and go to state 14

    $default  reduce using rule 20 (record_declarations)

    record_declarations  go to state 15
    record_declaration   go to state 16


State 9

    4 program_head: PROGRAM ID ';' •

    $default  reduce using rule 4 (program_head)


State 10

    2 program_head: PROGRAM ID '(' • id_list ')' ';'
    3             | PROGRAM ID '(' • ')' ';'

    ID   shift, and go to state 17
    ')'  shift, and go to state 18

    id_list  go to state 19


State 11

   11 const_declaration: ID • '=' const_value

    '='  shift, and go to state 20


State 12

    9 const_declarations: CONST const_declaration • ';'
   10 const_declaration: const_declaration • ';' ID '=' const_value

    ';'  shift, and go to state 21


State 13

    1 program: program_head program_body '.' •

    $default  reduce using rule 1 (program)


State 14

   22 record_declaration: TYPE • CHAR CONSTASSIGNOP RECORD var_declaration END ';'

    CHAR  shift, and go to state 22


State 15

    5 program_body: const_declarations record_declarations • var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 23

    $default  reduce using rule 24 (var_declarations)

    var_declarations  go to state 24


State 16

   21 record_declarations: record_declaration •
   23 record_declaration: record_declaration • TYPE CHAR CONSTASSIGNOP RECORD var_declaration END ';'

    TYPE  shift, and go to state 25

    $default  reduce using rule 21 (record_declarations)


State 17

    7 id_list: ID •

    $default  reduce using rule 7 (id_list)


State 18

    3 program_head: PROGRAM ID '(' ')' • ';'

    ';'  shift, and go to state 26


State 19

    2 program_head: PROGRAM ID '(' id_list • ')' ';'
    6 id_list: id_list • ',' ID

    ')'  shift, and go to state 27
    ','  shift, and go to state 28


State 20

   11 const_declaration: ID '=' • const_value

    PLUS      shift, and go to state 29
    UMINUS    shift, and go to state 30
    CHAR      shift, and go to state 31
    INT_NUM   shift, and go to state 32
    REAL_NUM  shift, and go to state 33
    STRING_   shift, and go to state 34

    const_value  go to state 35


State 21

    9 const_declarations: CONST const_declaration ';' •
   10 const_declaration: const_declaration ';' • ID '=' const_value

    ID  shift, and go to state 36

    $default  reduce using rule 9 (const_declarations)


State 22

   22 record_declaration: TYPE CHAR • CONSTASSIGNOP RECORD var_declaration END ';'

    CONSTASSIGNOP  shift, and go to state 37


State 23

   25 var_declarations: VAR • var_declaration ';'

    ID  shift, and go to state 17

    id_list          go to state 38
    var_declaration  go to state 39


State 24

    5 program_body: const_declarations record_declarations var_declarations • subprogram_declarations compound_statement

    $default  reduce using rule 38 (subprogram_declarations)

    subprogram_declarations  go to state 40


State 25

   23 record_declaration: record_declaration TYPE • CHAR CONSTASSIGNOP RECORD var_declaration END ';'

    CHAR  shift, and go to state 41


State 26

    3 program_head: PROGRAM ID '(' ')' ';' •

    $default  reduce using rule 3 (program_head)


State 27

    2 program_head: PROGRAM ID '(' id_list ')' • ';'

    ';'  shift, and go to state 42


State 28

    6 id_list: id_list ',' • ID

    ID  shift, and go to state 43


State 29

   12 const_value: PLUS • INT_NUM
   15            | PLUS • REAL_NUM

    INT_NUM   shift, and go to state 44
    REAL_NUM  shift, and go to state 45


State 30

   13 const_value: UMINUS • INT_NUM
   16            | UMINUS • REAL_NUM

    INT_NUM   shift, and go to state 46
    REAL_NUM  shift, and go to state 47


State 31

   19 const_value: CHAR •

    $default  reduce using rule 19 (const_value)


State 32

   14 const_value: INT_NUM •

    $default  reduce using rule 14 (const_value)


State 33

   17 const_value: REAL_NUM •

    $default  reduce using rule 17 (const_value)


State 34

   18 const_value: STRING_ •

    $default  reduce using rule 18 (const_value)


State 35

   11 const_declaration: ID '=' const_value •

    $default  reduce using rule 11 (const_declaration)


State 36

   10 const_declaration: const_declaration ';' ID • '=' const_value

    '='  shift, and go to state 48


State 37

   22 record_declaration: TYPE CHAR CONSTASSIGNOP • RECORD var_declaration END ';'

    RECORD  shift, and go to state 49


State 38

    6 id_list: id_list • ',' ID
   27 var_declaration: id_list • ':' type

    ','  shift, and go to state 28
    ':'  shift, and go to state 50


State 39

   25 var_declarations: VAR var_declaration • ';'
   26 var_declaration: var_declaration • ';' id_list ':' type

    ';'  shift, and go to state 51


State 40

    5 program_body: const_declarations record_declarations var_declarations subprogram_declarations • compound_statement
   39 subprogram_declarations: subprogram_declarations • subprogram_declaration ';'

    FUNCTION   shift, and go to state 52
    PROCEDURE  shift, and go to state 53
    BEGIN_     shift, and go to state 54

    subprogram_declaration  go to state 55
    subprogram_head         go to state 56
    compound_statement      go to state 57


State 41

   23 record_declaration: record_declaration TYPE CHAR • CONSTASSIGNOP RECORD var_declaration END ';'

    CONSTASSIGNOP  shift, and go to state 58


State 42

    2 program_head: PROGRAM ID '(' id_list ')' ';' •

    $default  reduce using rule 2 (program_head)


State 43

    6 id_list: id_list ',' ID •

    $default  reduce using rule 6 (id_list)


State 44

   12 const_value: PLUS INT_NUM •

    $default  reduce using rule 12 (const_value)


State 45

   15 const_value: PLUS REAL_NUM •

    $default  reduce using rule 15 (const_value)


State 46

   13 const_value: UMINUS INT_NUM •

    $default  reduce using rule 13 (const_value)


State 47

   16 const_value: UMINUS REAL_NUM •

    $default  reduce using rule 16 (const_value)


State 48

   10 const_declaration: const_declaration ';' ID '=' • const_value

    PLUS      shift, and go to state 29
    UMINUS    shift, and go to state 30
    CHAR      shift, and go to state 31
    INT_NUM   shift, and go to state 32
    REAL_NUM  shift, and go to state 33
    STRING_   shift, and go to state 34

    const_value  go to state 59


State 49

   22 record_declaration: TYPE CHAR CONSTASSIGNOP RECORD • var_declaration END ';'

    ID  shift, and go to state 17

    id_list          go to state 38
    var_declaration  go to state 60


State 50

   27 var_declaration: id_list ':' • type

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    STRING  shift, and go to state 63
    ID      shift, and go to state 64

    type         go to state 65
    array_type   go to state 66
    string_type  go to state 67


State 51

   25 var_declarations: VAR var_declaration ';' •
   26 var_declaration: var_declaration ';' • id_list ':' type

    ID  shift, and go to state 17

    $default  reduce using rule 25 (var_declarations)

    id_list  go to state 68


State 52

   42 subprogram_head: FUNCTION • ID formal_parameter ':' type ';'

    ID  shift, and go to state 69


State 53

   43 subprogram_head: PROCEDURE • ID formal_parameter ';'

    ID  shift, and go to state 70


State 54

   52 compound_statement: BEGIN_ • statement_list END

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement_list      go to state 77
    statement           go to state 78
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 55

   39 subprogram_declarations: subprogram_declarations subprogram_declaration • ';'

    ';'  shift, and go to state 84


State 56

   40 subprogram_declaration: subprogram_head • subprogram_body

    CONST  shift, and go to state 6

    $default  reduce using rule 8 (const_declarations)

    const_declarations  go to state 85
    subprogram_body     go to state 86


State 57

    5 program_body: const_declarations record_declarations var_declarations subprogram_declarations compound_statement •

    $default  reduce using rule 5 (program_body)


State 58

   23 record_declaration: record_declaration TYPE CHAR CONSTASSIGNOP • RECORD var_declaration END ';'

    RECORD  shift, and go to state 87


State 59

   10 const_declaration: const_declaration ';' ID '=' const_value •

    $default  reduce using rule 10 (const_declaration)


State 60

   22 record_declaration: TYPE CHAR CONSTASSIGNOP RECORD var_declaration • END ';'
   26 var_declaration: var_declaration • ';' id_list ':' type

    END  shift, and go to state 88
    ';'  shift, and go to state 89


State 61

   32 array_type: ARRAY • '[' periods ']' OF type

    '['  shift, and go to state 90


State 62

   30 type: RECORD • var_declaration END ';'

    ID  shift, and go to state 17

    id_list          go to state 38
    var_declaration  go to state 91


State 63

   36 string_type: STRING • '[' INT_NUM ']'
   37            | STRING •

    '['  shift, and go to state 92

    $default  reduce using rule 37 (string_type)


State 64

   28 type: ID •

    $default  reduce using rule 28 (type)


State 65

   27 var_declaration: id_list ':' type •

    $default  reduce using rule 27 (var_declaration)


State 66

   29 type: array_type •

    $default  reduce using rule 29 (type)


State 67

   31 type: string_type •

    $default  reduce using rule 31 (type)


State 68

    6 id_list: id_list • ',' ID
   26 var_declaration: var_declaration ';' id_list • ':' type

    ','  shift, and go to state 28
    ':'  shift, and go to state 93


State 69

   42 subprogram_head: FUNCTION ID • formal_parameter ':' type ';'

    '('  shift, and go to state 94

    $default  reduce using rule 44 (formal_parameter)

    formal_parameter  go to state 95


State 70

   43 subprogram_head: PROCEDURE ID • formal_parameter ';'

    '('  shift, and go to state 94

    $default  reduce using rule 44 (formal_parameter)

    formal_parameter  go to state 96


State 71

   66 ifstatement: IF • expression THEN statement else_part

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 107
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 72

   69 loopstatement: WHILE • expression DO statement

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 111
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 73

   71 loopstatement: FOR • ID ASSIGNOP expression DOWNTO expression DO statement
   72              | FOR • ID ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 112


State 74

   70 loopstatement: REPEAT • statement_list UNTIL expression

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement_list      go to state 113
    statement           go to state 78
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 75

   62 procedure_call: ID •
   63               | ID • '(' ')'
   64               | ID • '(' expression_list ')'
   65               | ID • '(' variable_list ')'
   75 variable: ID • id_varparts

    '('  shift, and go to state 114

    ASSIGNOP  reduce using rule 76 (id_varparts)
    '.'       reduce using rule 76 (id_varparts)
    '['       reduce using rule 76 (id_varparts)
    $default  reduce using rule 62 (procedure_call)

    id_varparts  go to state 115


State 76

   57 statement: compound_statement •

    $default  reduce using rule 57 (statement)


State 77

   52 compound_statement: BEGIN_ statement_list • END
   53 statement_list: statement_list • ';' statement

    END  shift, and go to state 116
    ';'  shift, and go to state 117


State 78

   54 statement_list: statement •

    $default  reduce using rule 54 (statement_list)


State 79

   55 statement: assignop_statement •

    $default  reduce using rule 55 (statement)


State 80

   56 statement: procedure_call •

    $default  reduce using rule 56 (statement)


State 81

   58 statement: ifstatement •

    $default  reduce using rule 58 (statement)


State 82

   59 statement: loopstatement •

    $default  reduce using rule 59 (statement)


State 83

   61 assignop_statement: variable • ASSIGNOP expression

    ASSIGNOP  shift, and go to state 118


State 84

   39 subprogram_declarations: subprogram_declarations subprogram_declaration ';' •

    $default  reduce using rule 39 (subprogram_declarations)


State 85

   41 subprogram_body: const_declarations • var_declarations compound_statement

    VAR  shift, and go to state 23

    $default  reduce using rule 24 (var_declarations)

    var_declarations  go to state 119


State 86

   40 subprogram_declaration: subprogram_head subprogram_body •

    $default  reduce using rule 40 (subprogram_declaration)


State 87

   23 record_declaration: record_declaration TYPE CHAR CONSTASSIGNOP RECORD • var_declaration END ';'

    ID  shift, and go to state 17

    id_list          go to state 38
    var_declaration  go to state 120


State 88

   22 record_declaration: TYPE CHAR CONSTASSIGNOP RECORD var_declaration END • ';'

    ';'  shift, and go to state 121


State 89

   26 var_declaration: var_declaration ';' • id_list ':' type

    ID  shift, and go to state 17

    id_list  go to state 68


State 90

   32 array_type: ARRAY '[' • periods ']' OF type

    INT_NUM  shift, and go to state 122

    periods  go to state 123
    period   go to state 124


State 91

   26 var_declaration: var_declaration • ';' id_list ':' type
   30 type: RECORD var_declaration • END ';'

    END  shift, and go to state 125
    ';'  shift, and go to state 89


State 92

   36 string_type: STRING '[' • INT_NUM ']'

    INT_NUM  shift, and go to state 126


State 93

   26 var_declaration: var_declaration ';' id_list ':' • type

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    STRING  shift, and go to state 63
    ID      shift, and go to state 64

    type         go to state 127
    array_type   go to state 66
    string_type  go to state 67


State 94

   45 formal_parameter: '(' • parameter_lists ')'

    ID   shift, and go to state 17
    VAR  shift, and go to state 128

    id_list          go to state 129
    parameter_lists  go to state 130
    parameter_list   go to state 131
    var_parameter    go to state 132
    value_parameter  go to state 133


State 95

   42 subprogram_head: FUNCTION ID formal_parameter • ':' type ';'

    ':'  shift, and go to state 134


State 96

   43 subprogram_head: PROCEDURE ID formal_parameter • ';'

    ';'  shift, and go to state 135


State 97

  100 factor: NOT • factor

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    factor    go to state 137


State 98

   86 simple_expression: PLUS • term

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    term      go to state 138
    factor    go to state 110


State 99

   87 simple_expression: UMINUS • term
  101 factor: UMINUS • factor

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    term      go to state 139
    factor    go to state 140


State 100

   75 variable: ID • id_varparts
   98 factor: ID • '(' expression_list ')'

    '('  shift, and go to state 141

    $default  reduce using rule 76 (id_varparts)

    id_varparts  go to state 115


State 101

   96 factor: CHAR •

    $default  reduce using rule 96 (factor)


State 102

   93 factor: INT_NUM •

    $default  reduce using rule 93 (factor)


State 103

   94 factor: REAL_NUM •

    $default  reduce using rule 94 (factor)


State 104

   95 factor: STRING_ •

    $default  reduce using rule 95 (factor)


State 105

   99 factor: '(' • expression ')'

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 142
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 106

   97 factor: variable •

    $default  reduce using rule 97 (factor)


State 107

   66 ifstatement: IF expression • THEN statement else_part

    THEN  shift, and go to state 143


State 108

   82 expression: simple_expression • RELOP simple_expression
   83           | simple_expression • CONSTASSIGNOP simple_expression
   84           | simple_expression •
   88 simple_expression: simple_expression • ADDOP term
   89                  | simple_expression • PLUS term
   90                  | simple_expression • UMINUS term

    ADDOP          shift, and go to state 144
    PLUS           shift, and go to state 145
    UMINUS         shift, and go to state 146
    CONSTASSIGNOP  shift, and go to state 147
    RELOP          shift, and go to state 148

    $default  reduce using rule 84 (expression)


State 109

   85 simple_expression: term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 85 (simple_expression)


State 110

   91 term: factor •

    $default  reduce using rule 91 (term)


State 111

   69 loopstatement: WHILE expression • DO statement

    DO  shift, and go to state 150


State 112

   71 loopstatement: FOR ID • ASSIGNOP expression DOWNTO expression DO statement
   72              | FOR ID • ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 151


State 113

   53 statement_list: statement_list • ';' statement
   70 loopstatement: REPEAT statement_list • UNTIL expression

    UNTIL  shift, and go to state 152
    ';'    shift, and go to state 117


State 114

   63 procedure_call: ID '(' • ')'
   64               | ID '(' • expression_list ')'
   65               | ID '(' • variable_list ')'

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105
    ')'       shift, and go to state 153

    variable_list      go to state 154
    variable           go to state 155
    expression_list    go to state 156
    expression         go to state 157
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 115

   75 variable: ID id_varparts •
   77 id_varparts: id_varparts • id_varpart

    '.'  shift, and go to state 158
    '['  shift, and go to state 159

    $default  reduce using rule 75 (variable)

    id_varpart  go to state 160


State 116

   52 compound_statement: BEGIN_ statement_list END •

    $default  reduce using rule 52 (compound_statement)


State 117

   53 statement_list: statement_list ';' • statement

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 161
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 118

   61 assignop_statement: variable ASSIGNOP • expression

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 162
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 119

   41 subprogram_body: const_declarations var_declarations • compound_statement

    BEGIN_  shift, and go to state 54

    compound_statement  go to state 163


State 120

   23 record_declaration: record_declaration TYPE CHAR CONSTASSIGNOP RECORD var_declaration • END ';'
   26 var_declaration: var_declaration • ';' id_list ':' type

    END  shift, and go to state 164
    ';'  shift, and go to state 89


State 121

   22 record_declaration: TYPE CHAR CONSTASSIGNOP RECORD var_declaration END ';' •

    $default  reduce using rule 22 (record_declaration)


State 122

   35 period: INT_NUM • SUBCATALOG INT_NUM

    SUBCATALOG  shift, and go to state 165


State 123

   32 array_type: ARRAY '[' periods • ']' OF type
   33 periods: periods • ',' period

    ','  shift, and go to state 166
    ']'  shift, and go to state 167


State 124

   34 periods: period •

    $default  reduce using rule 34 (periods)


State 125

   30 type: RECORD var_declaration END • ';'

    ';'  shift, and go to state 168


State 126

   36 string_type: STRING '[' INT_NUM • ']'

    ']'  shift, and go to state 169


State 127

   26 var_declaration: var_declaration ';' id_list ':' type •

    $default  reduce using rule 26 (var_declaration)


State 128

   50 var_parameter: VAR • value_parameter

    ID  shift, and go to state 17

    id_list          go to state 129
    value_parameter  go to state 170


State 129

    6 id_list: id_list • ',' ID
   51 value_parameter: id_list • ':' type

    ','  shift, and go to state 28
    ':'  shift, and go to state 171


State 130

   45 formal_parameter: '(' parameter_lists • ')'
   46 parameter_lists: parameter_lists • ';' parameter_list

    ';'  shift, and go to state 172
    ')'  shift, and go to state 173


State 131

   47 parameter_lists: parameter_list •

    $default  reduce using rule 47 (parameter_lists)


State 132

   48 parameter_list: var_parameter •

    $default  reduce using rule 48 (parameter_list)


State 133

   49 parameter_list: value_parameter •

    $default  reduce using rule 49 (parameter_list)


State 134

   42 subprogram_head: FUNCTION ID formal_parameter ':' • type ';'

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    STRING  shift, and go to state 63
    ID      shift, and go to state 64

    type         go to state 174
    array_type   go to state 66
    string_type  go to state 67


State 135

   43 subprogram_head: PROCEDURE ID formal_parameter ';' •

    $default  reduce using rule 43 (subprogram_head)


State 136

  101 factor: UMINUS • factor

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    factor    go to state 175


State 137

  100 factor: NOT factor •

    $default  reduce using rule 100 (factor)


State 138

   86 simple_expression: PLUS term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 86 (simple_expression)


State 139

   87 simple_expression: UMINUS term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 87 (simple_expression)


State 140

   91 term: factor •
  101 factor: UMINUS factor •

    TO             reduce using rule 91 (term)
    TO             [reduce using rule 101 (factor)]
    DOWNTO         reduce using rule 91 (term)
    DOWNTO         [reduce using rule 101 (factor)]
    THEN           reduce using rule 91 (term)
    THEN           [reduce using rule 101 (factor)]
    ELSE           reduce using rule 91 (term)
    ELSE           [reduce using rule 101 (factor)]
    DO             reduce using rule 91 (term)
    DO             [reduce using rule 101 (factor)]
    UNTIL          reduce using rule 91 (term)
    UNTIL          [reduce using rule 101 (factor)]
    END            reduce using rule 91 (term)
    END            [reduce using rule 101 (factor)]
    ADDOP          reduce using rule 91 (term)
    ADDOP          [reduce using rule 101 (factor)]
    PLUS           reduce using rule 91 (term)
    PLUS           [reduce using rule 101 (factor)]
    UMINUS         reduce using rule 91 (term)
    UMINUS         [reduce using rule 101 (factor)]
    CONSTASSIGNOP  reduce using rule 91 (term)
    CONSTASSIGNOP  [reduce using rule 101 (factor)]
    RELOP          reduce using rule 91 (term)
    RELOP          [reduce using rule 101 (factor)]
    MULOP          reduce using rule 91 (term)
    MULOP          [reduce using rule 101 (factor)]
    ';'            reduce using rule 91 (term)
    ';'            [reduce using rule 101 (factor)]
    ')'            reduce using rule 91 (term)
    ')'            [reduce using rule 101 (factor)]
    ','            reduce using rule 91 (term)
    ','            [reduce using rule 101 (factor)]
    ']'            reduce using rule 91 (term)
    ']'            [reduce using rule 101 (factor)]
    $default       reduce using rule 91 (term)


State 141

   98 factor: ID '(' • expression_list ')'

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression_list    go to state 176
    expression         go to state 157
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 142

   99 factor: '(' expression • ')'

    ')'  shift, and go to state 177


State 143

   66 ifstatement: IF expression THEN • statement else_part

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 178
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 144

   88 simple_expression: simple_expression ADDOP • term

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    term      go to state 179
    factor    go to state 110


State 145

   89 simple_expression: simple_expression PLUS • term

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    term      go to state 180
    factor    go to state 110


State 146

   90 simple_expression: simple_expression UMINUS • term

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    term      go to state 181
    factor    go to state 110


State 147

   83 expression: simple_expression CONSTASSIGNOP • simple_expression

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    simple_expression  go to state 182
    term               go to state 109
    factor             go to state 110


State 148

   82 expression: simple_expression RELOP • simple_expression

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    simple_expression  go to state 183
    term               go to state 109
    factor             go to state 110


State 149

   92 term: term MULOP • factor

    NOT       shift, and go to state 97
    UMINUS    shift, and go to state 136
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable  go to state 106
    factor    go to state 184


State 150

   69 loopstatement: WHILE expression DO • statement

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 185
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 151

   71 loopstatement: FOR ID ASSIGNOP • expression DOWNTO expression DO statement
   72              | FOR ID ASSIGNOP • expression TO expression DO statement

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 186
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 152

   70 loopstatement: REPEAT statement_list UNTIL • expression

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 187
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 153

   63 procedure_call: ID '(' ')' •

    $default  reduce using rule 63 (procedure_call)


State 154

   65 procedure_call: ID '(' variable_list • ')'
   74 variable_list: variable_list • ',' variable

    ')'  shift, and go to state 188
    ','  shift, and go to state 189


State 155

   73 variable_list: variable •
   97 factor: variable •

    ')'       reduce using rule 73 (variable_list)
    ')'       [reduce using rule 97 (factor)]
    ','       reduce using rule 73 (variable_list)
    ','       [reduce using rule 97 (factor)]
    $default  reduce using rule 97 (factor)


State 156

   64 procedure_call: ID '(' expression_list • ')'
   80 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 190
    ','  shift, and go to state 191


State 157

   81 expression_list: expression •

    $default  reduce using rule 81 (expression_list)


State 158

   79 id_varpart: '.' • ID

    ID  shift, and go to state 192


State 159

   78 id_varpart: '[' • expression_list ']'

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression_list    go to state 193
    expression         go to state 157
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 160

   77 id_varparts: id_varparts id_varpart •

    $default  reduce using rule 77 (id_varparts)


State 161

   53 statement_list: statement_list ';' statement •

    $default  reduce using rule 53 (statement_list)


State 162

   61 assignop_statement: variable ASSIGNOP expression •

    $default  reduce using rule 61 (assignop_statement)


State 163

   41 subprogram_body: const_declarations var_declarations compound_statement •

    $default  reduce using rule 41 (subprogram_body)


State 164

   23 record_declaration: record_declaration TYPE CHAR CONSTASSIGNOP RECORD var_declaration END • ';'

    ';'  shift, and go to state 194


State 165

   35 period: INT_NUM SUBCATALOG • INT_NUM

    INT_NUM  shift, and go to state 195


State 166

   33 periods: periods ',' • period

    INT_NUM  shift, and go to state 122

    period  go to state 196


State 167

   32 array_type: ARRAY '[' periods ']' • OF type

    OF  shift, and go to state 197


State 168

   30 type: RECORD var_declaration END ';' •

    $default  reduce using rule 30 (type)


State 169

   36 string_type: STRING '[' INT_NUM ']' •

    $default  reduce using rule 36 (string_type)


State 170

   50 var_parameter: VAR value_parameter •

    $default  reduce using rule 50 (var_parameter)


State 171

   51 value_parameter: id_list ':' • type

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    STRING  shift, and go to state 63
    ID      shift, and go to state 64

    type         go to state 198
    array_type   go to state 66
    string_type  go to state 67


State 172

   46 parameter_lists: parameter_lists ';' • parameter_list

    ID   shift, and go to state 17
    VAR  shift, and go to state 128

    id_list          go to state 129
    parameter_list   go to state 199
    var_parameter    go to state 132
    value_parameter  go to state 133


State 173

   45 formal_parameter: '(' parameter_lists ')' •

    $default  reduce using rule 45 (formal_parameter)


State 174

   42 subprogram_head: FUNCTION ID formal_parameter ':' type • ';'

    ';'  shift, and go to state 200


State 175

  101 factor: UMINUS factor •

    $default  reduce using rule 101 (factor)


State 176

   80 expression_list: expression_list • ',' expression
   98 factor: ID '(' expression_list • ')'

    ')'  shift, and go to state 201
    ','  shift, and go to state 191


State 177

   99 factor: '(' expression ')' •

    $default  reduce using rule 99 (factor)


State 178

   66 ifstatement: IF expression THEN statement • else_part

    ELSE  shift, and go to state 202

    ELSE      [reduce using rule 67 (else_part)]
    $default  reduce using rule 67 (else_part)

    else_part  go to state 203


State 179

   88 simple_expression: simple_expression ADDOP term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 88 (simple_expression)


State 180

   89 simple_expression: simple_expression PLUS term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 89 (simple_expression)


State 181

   90 simple_expression: simple_expression UMINUS term •
   92 term: term • MULOP factor

    MULOP  shift, and go to state 149

    $default  reduce using rule 90 (simple_expression)


State 182

   83 expression: simple_expression CONSTASSIGNOP simple_expression •
   88 simple_expression: simple_expression • ADDOP term
   89                  | simple_expression • PLUS term
   90                  | simple_expression • UMINUS term

    ADDOP   shift, and go to state 144
    PLUS    shift, and go to state 145
    UMINUS  shift, and go to state 146

    $default  reduce using rule 83 (expression)


State 183

   82 expression: simple_expression RELOP simple_expression •
   88 simple_expression: simple_expression • ADDOP term
   89                  | simple_expression • PLUS term
   90                  | simple_expression • UMINUS term

    ADDOP   shift, and go to state 144
    PLUS    shift, and go to state 145
    UMINUS  shift, and go to state 146

    $default  reduce using rule 82 (expression)


State 184

   92 term: term MULOP factor •

    $default  reduce using rule 92 (term)


State 185

   69 loopstatement: WHILE expression DO statement •

    $default  reduce using rule 69 (loopstatement)


State 186

   71 loopstatement: FOR ID ASSIGNOP expression • DOWNTO expression DO statement
   72              | FOR ID ASSIGNOP expression • TO expression DO statement

    TO      shift, and go to state 204
    DOWNTO  shift, and go to state 205


State 187

   70 loopstatement: REPEAT statement_list UNTIL expression •

    $default  reduce using rule 70 (loopstatement)


State 188

   65 procedure_call: ID '(' variable_list ')' •

    $default  reduce using rule 65 (procedure_call)


State 189

   74 variable_list: variable_list ',' • variable

    ID  shift, and go to state 206

    variable  go to state 207


State 190

   64 procedure_call: ID '(' expression_list ')' •

    $default  reduce using rule 64 (procedure_call)


State 191

   80 expression_list: expression_list ',' • expression

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 208
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 192

   79 id_varpart: '.' ID •

    $default  reduce using rule 79 (id_varpart)


State 193

   78 id_varpart: '[' expression_list • ']'
   80 expression_list: expression_list • ',' expression

    ','  shift, and go to state 191
    ']'  shift, and go to state 209


State 194

   23 record_declaration: record_declaration TYPE CHAR CONSTASSIGNOP RECORD var_declaration END ';' •

    $default  reduce using rule 23 (record_declaration)


State 195

   35 period: INT_NUM SUBCATALOG INT_NUM •

    $default  reduce using rule 35 (period)


State 196

   33 periods: periods ',' period •

    $default  reduce using rule 33 (periods)


State 197

   32 array_type: ARRAY '[' periods ']' OF • type

    ARRAY   shift, and go to state 61
    RECORD  shift, and go to state 62
    STRING  shift, and go to state 63
    ID      shift, and go to state 64

    type         go to state 210
    array_type   go to state 66
    string_type  go to state 67


State 198

   51 value_parameter: id_list ':' type •

    $default  reduce using rule 51 (value_parameter)


State 199

   46 parameter_lists: parameter_lists ';' parameter_list •

    $default  reduce using rule 46 (parameter_lists)


State 200

   42 subprogram_head: FUNCTION ID formal_parameter ':' type ';' •

    $default  reduce using rule 42 (subprogram_head)


State 201

   98 factor: ID '(' expression_list ')' •

    $default  reduce using rule 98 (factor)


State 202

   68 else_part: ELSE • statement

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 211
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 203

   66 ifstatement: IF expression THEN statement else_part •

    $default  reduce using rule 66 (ifstatement)


State 204

   72 loopstatement: FOR ID ASSIGNOP expression TO • expression DO statement

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 212
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 205

   71 loopstatement: FOR ID ASSIGNOP expression DOWNTO • expression DO statement

    NOT       shift, and go to state 97
    PLUS      shift, and go to state 98
    UMINUS    shift, and go to state 99
    ID        shift, and go to state 100
    CHAR      shift, and go to state 101
    INT_NUM   shift, and go to state 102
    REAL_NUM  shift, and go to state 103
    STRING_   shift, and go to state 104
    '('       shift, and go to state 105

    variable           go to state 106
    expression         go to state 213
    simple_expression  go to state 108
    term               go to state 109
    factor             go to state 110


State 206

   75 variable: ID • id_varparts

    $default  reduce using rule 76 (id_varparts)

    id_varparts  go to state 115


State 207

   74 variable_list: variable_list ',' variable •

    $default  reduce using rule 74 (variable_list)


State 208

   80 expression_list: expression_list ',' expression •

    $default  reduce using rule 80 (expression_list)


State 209

   78 id_varpart: '[' expression_list ']' •

    $default  reduce using rule 78 (id_varpart)


State 210

   32 array_type: ARRAY '[' periods ']' OF type •

    $default  reduce using rule 32 (array_type)


State 211

   68 else_part: ELSE statement •

    $default  reduce using rule 68 (else_part)


State 212

   72 loopstatement: FOR ID ASSIGNOP expression TO expression • DO statement

    DO  shift, and go to state 214


State 213

   71 loopstatement: FOR ID ASSIGNOP expression DOWNTO expression • DO statement

    DO  shift, and go to state 215


State 214

   72 loopstatement: FOR ID ASSIGNOP expression TO expression DO • statement

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 216
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 215

   71 loopstatement: FOR ID ASSIGNOP expression DOWNTO expression DO • statement

    IF      shift, and go to state 71
    WHILE   shift, and go to state 72
    FOR     shift, and go to state 73
    REPEAT  shift, and go to state 74
    BEGIN_  shift, and go to state 54
    ID      shift, and go to state 75

    $default  reduce using rule 60 (statement)

    compound_statement  go to state 76
    statement           go to state 217
    assignop_statement  go to state 79
    procedure_call      go to state 80
    ifstatement         go to state 81
    loopstatement       go to state 82
    variable            go to state 83


State 216

   72 loopstatement: FOR ID ASSIGNOP expression TO expression DO statement •

    $default  reduce using rule 72 (loopstatement)


State 217

   71 loopstatement: FOR ID ASSIGNOP expression DOWNTO expression DO statement •

    $default  reduce using rule 71 (loopstatement)
