@startuml
class "TableRecord" as C_0001606454869580324163
class C_0001606454869580324163 {
+TableRecord() : void
+~TableRecord() : void
..
+checkArrayXthIndexRange(int X, int index) : bool
+findXthFormalParaType(int X) : std::string
+isXthFormalParaRefered(int X) : bool
+setArray(std::string id_para, int rowNumber_para, std::string type_para, int amount_para, std::vector<pair<int,int>> arrayRange_para) : void
+setConst(std::string id_para, int rowNumber_para, std::string type_para, bool isMinus_para, std::string value_para) : void
+setFunction(std::string id_para, int rowNumber_para, std::string type_para, int amount_para, SymbolTable * subSymbolTable_para) : void
+setPara(std::string id_para, int rowNumber_para, std::string type_para) : void
+setProcedure(std::string id_para, int rowNumber_para, int amount_para, SymbolTable * subSymbolTable_para) : void
+setProgramName(std::string id_para, int rowNumber_para, std::string programInfo_para, int amount_para, std::string returnType_para) : void
+setRecord(std::string id_para, std::string recordName, int rowNumber_para, SymbolTable * subSymbolTable_para) : void
+setString(std::string id_para, int rowNumber_para, std::string type_para, int amount_para) : void
+setVar(std::string id_para, int rowNumber_para, std::string type_para) : void
+setVarPara(std::string id_para, int rowNumber_para, std::string type_para) : void
+setVoidPara(std::string id_para, int rowNumber_para) : void
__
+amount : int
+arrayRange : vector<pair<int,int>>
+flag : std::string
+id : std::string
+isMinus : bool
+programInfo : std::string
+rowNumber : int
+subSymbolTable : SymbolTable *
+type : std::string
+value : std::string
}
class "SymbolTable" as C_0000522733582439809359
class C_0000522733582439809359 {
+SymbolTable(std::string type = "sub") : void
+~SymbolTable() : void
..
+addArray(std::string id, int rowNumber, std::string type, int amount, std::vector<pair<int,int>> arrayRange) : void
+addConst(std::string id, int rowNumber, std::string type, bool isMinus, std::string value) : void
+addFunction(std::string id, int rowNumber, std::string type, int amount, SymbolTable * subSymbolTable) : void
+addPara(std::string id, int rowNumber, std::string type) : void
+addProcedure(std::string id, int rowNumber, int amount, SymbolTable * subSymbolTable) : void
+addProgramName(std::string id, int rowNumber, std::string programInfo, int amount, std::string returnType) : void
+addRecord(std::string id, std::string recordName, int rowNumber, SymbolTable * subSymbolTable) : void
+addString(std::string id, int rowNumber, std::string type, int amount) : void
+addSubSymbolTable(std::string id, SymbolTable * subSymbolTable) : void
+addVar(std::string id, int rowNumber, std::string type) : void
+addVarPara(std::string id, int rowNumber, std::string type) : void
+addVoidPara(std::string id, int rowNumber) : void
__
+idLoc : unordered_map<std::string,int>
+records : vector<TableRecord *>
+tableType : std::string
}
class "TypeTableRecord" as C_0001628368238549969542
class C_0001628368238549969542 {
+TypeTableRecord() : void
+~TypeTableRecord() : void
..
+setType(std::string id, bool isCoverd, SymbolTable * RecordTable) : void
__
+RecordTable : SymbolTable *
+id : std::string
+isCoverd : bool
}
class "TypeTable" as C_0000744774109044742354
class C_0000744774109044742354 {
+TypeTable() : void
+~TypeTable() : void
..
+addType(std::string id, bool isCoverd, SymbolTable * RecordTable) : void
+findID(std::string id) : TypeTableRecord *
__
+idLoc : unordered_map<std::string,int>
+records : vector<TypeTableRecord *>
}
C_0001606454869580324163 --> C_0000522733582439809359 : +subSymbolTable
C_0000522733582439809359 --> C_0001606454869580324163 : +records
C_0001628368238549969542 --> C_0000522733582439809359 : +RecordTable
C_0000744774109044742354 ..> C_0000522733582439809359
C_0000744774109044742354 --> C_0001628368238549969542 : +records

'Generated with clang-uml, version 0.5.2
'LLVM version Ubuntu clang version 15.0.7
@enduml
